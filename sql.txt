-- CH1 - Select Queries 

1.
SELECT Title
FROM Movies;

2
SELECT Director
FROM Movies;

3.
SELECT Title, Director
FROM Movies;

4.
SELECT Title, Director
FROM Movies;

5.
SELECT *
FROM Movies;

 CH2 - Queries with constraints 

1.
SELECT *
FROM Movies
WHERE Id = 6;

2. 
SELECT *
FROM Movies
WHERE Year BETWEEN 2000 AND 2010;

3.
SELECT *
FROM Movies
WHERE Year NOT BETWEEN 2000 AND 2010;

4.
SELECT *
FROM Movies
WHERE Id BETWEEN 1 AND 5;

CH3 - Queries with constraints 

1.
SELECT *
FROM Movies
WHERE Title LIKE "%Toy Story%";

2.
SELECT *
FROM Movies
WHERE Director = "John Lasseter";

3.
SELECT *
FROM Movies
WHERE Director != "John Lasseter";

4.
SELECT *
FROM Movies
WHERE Title LIKE "%WALL%";

 CH4 Filtering and sorting Query results

1.
SELECT DISTINCT Director
FROM Movies
ORDER BY Director;

2.
SELECT *
FROM Movies
ORDER BY Year DESC
LIMIT 4;

3.
SELECT *
FROM Movies
ORDER BY Title ASC
LIMIT 5;

4.
SELECT *
FROM Movies
ORDER BY Title ASC
LIMIT 5
OFFSET 5;

 CH5 - Review Simple SELECT Queries


1.SELECT *
FROM North_american_cities
WHERE Country LIKE "Canada";

2.
SELECT *
FROM North_american_cities
WHERE Country = "United States"
ORDER BY Latitude DESC;

3.
SELECT *
FROM North_american_cities
WHERE Longitude < -87.69
ORDER BY Longitude ASC;

4.
SELECT *
FROM North_american_cities
WHERE Country LIKE "Mexico"
ORDER BY Population DESC
LIMIT 2;

5.
SELECT *
FROM North_american_cities
WHERE Country LIKE "United States"
ORDER BY Population DESC
LIMIT 2
OFFSET 2;

 CH6 - Multi-table queries with JOINs

1.
SELECT Title, International_sales, Domestic_sales
FROM Movies JOIN Boxoffice
ON Id=Movie_id;

2.
SELECT Title, International_sales, Domestic_sales
FROM Movies JOIN Boxoffice
ON Id=Movie_id
WHERE International_sales > Domestic_sales;

3.
SELECT Title, Rating
FROM Movies JOIN Boxoffice
ON Id=Movie_id
ORDER BY Rating DESC;

-- CH7 - OUTER JOIN

1.
SELECT DISTINCT Building
FROM Employees
LEFT JOIN Buildings ON Building=Building_name
WHERE Years_employed NOT NULL;

2. 
SELECT *
FROM Buildings;

3.
SELECT DISTINCT Building_name, Role 
FROM Buildings 
LEFT JOIN employees ON building_name = building;

 CH8 - A short note on NULLs

1.
SELECT *
FROM Employees
LEFT JOIN Buildings
ON Building_name = Building
WHERE Building IS NULL;

2.
SELECT *
FROM Buildings
LEFT JOIN Employees
ON Building_name = Building
WHERE Building IS NULL;

-- CH9 - Queries with expressions

1.
SELECT Title, (Domestic_sales + International_sales)/1000000 AS Total_Sales_Millions
FROM Movies
LEFT JOIN Boxoffice ON Id=Movie_Id;

2.
SELECT Title, Rating*10 as Percent
FROM Movies
LEFT JOIN Boxoffice ON Id=Movie_Id;

3.
SELECT Title, Year
FROM Movies
LEFT JOIN Boxoffice ON Id=Movie_Id
WHERE Year % 2 = 0;

-- CH10 - Queries with aggregates (Pt. 1)

1.
SELECT MAX(Years_employed)
FROM Employees;

2.
SELECT Role, AVG(Years_Employed) 
FROM Employees
GROUP BY Role;

3.
SELECT Building, SUM(Years_Employed) 
FROM Employees
GROUP BY Building;

 CH11 - Queries with aggregates (Pt. 2)

1.
SELECT Role, COUNT(*) AS Number_of_Artists
FROM Employees
WHERE Role = "Artist";

2.
SELECT Role, COUNT(*)
FROM Employees
GROUP BY Role;

3.
SELECT Role, SUM(Years_Employed)
FROM Employees
GROUP BY Role
HAVING Role = "Engineer";

 CH12 - Order of execution of a Query

1.
SELECT *, COUNT(Title)
FROM Movies
GROUP BY Director;

2.
SELECT Director, sum(Domestic_sales + International_Sales) as Total_Sales
FROM Movies
LEFT JOIN Boxoffice ON Id = Movie_ID
GROUP BY Director;

CH13 - Inserting rows

1.
INSERT INTO Movies,
VALUES (4, "Toy Story 4", "John Lasseter", 2017, 123);

2.
INSERT INTO Boxoffice
VALUES (4, 8.7, 340000000, 270000000);

 CH14 - Updating rows

1.
UPDATE Movies
SET Director = "John Lasseter"
WHERE Id = 2;

2.
UPDATE Movies
SET Year = "1999"
WHERE Id = 3;

3.
UPDATE Movies
SET Title = "Toy Story 3", Director = "Lee Unkrich"
WHERE Id = 11;

 CH15 - Deleting rows

1.
DELETE FROM Movies
WHERE Year < 2005;

2.
DELETE FROM Movies
WHERE Director = "Andrew Stanton";

CH16 - Creating Tables

1.
CREATE TABLE Database (
    Name TEXT,
    Version FLOAT,
    Download_Count INTEGER);
    
CH17 - Altering Tables

1.
ALTER TABLE Movies
  ADD COLUMN Aspect_ratio FLOAT DEFAULT 3;
  
2.
ALTER TABLE Movies
  ADD COLUMN Language TEXT DEFAULT "English";

 CH18 - Dropping Tables
1.
DROP TABLE Movies;

2.
DROP TABLE BoxOffice;